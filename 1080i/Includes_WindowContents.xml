<includes>
	<!-- ========== -->
	<!-- Dimensions -->
	<!-- ========== -->
	<include name="FullscreenDimensions">
		<posx>0</posx>
		<posy>0</posy>
		<width>1920</width>
		<height>1080</height>
		<aspectratio>stretch</aspectratio>
	</include>
	<variable name="FullscreenOverlay">
		<value condition="Skin.HasSetting(MoreBackgroundOpacity)">windows/common/fanartoverlay.png</value>
		<value condition="!Skin.HasSetting(BackgroundOpacity)">windows/common/overlay.png</value>
		<value condition="Skin.HasSetting(BackgroundOpacity)">windows/common/overlay2.png</value>
	</variable>
	<!-- ================================================== -->
	<!-- Common Items: Shutdown, Options, Clock etc. -->
	<!-- ================================================== -->
	<include name="CommonOverlay">
		<control type="videowindow">
			<include>FullscreenDimensions</include>
			<visible>Skin.HasSetting(BackgroundVideo) + Player.HasVideo</visible>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>$VAR[FullscreenOverlay]</texture>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<include>Animation_FanartFade</include>
			<texture>windows/common/stage-dark.png</texture>
			<visible>Skin.HasSetting(Stage.Enabled)</visible>
		</control>
	</include>
	<include name="CommonOverlayHome">
		<control type="videowindow">
			<include>FullscreenDimensions</include>
			<visible>Skin.HasSetting(BackgroundVideo) + Player.HasVideo</visible>
		</control>
		<control type="visualisation">
			<include>FullscreenDimensions</include>
			<visible>Player.HasAudio + Skin.HasSetting(OSDVisualisation.Enabled) + Skin.HasSetting(HomeVisualisation.Enabled)</visible>
		</control>
		<control type="image"> <!-- show even more fanart but not on homescreen -->
			<include>FullscreenDimensions</include>
			<texture>windows/common/overlay2.png</texture>
			<visible>Skin.HasSetting(MoreHomeBackgroundOpacity) + Skin.HasSetting(MoreBackgroundOpacity)</visible>
		</control>
		<control type="image"> <!-- show even more fanart and also on homescreen -->
			<include>FullscreenDimensions</include>
			<texture>windows/common/fanartoverlay.png</texture>
			<visible>!Skin.HasSetting(MoreHomeBackgroundOpacity) + Skin.HasSetting(MoreBackgroundOpacity)</visible>
		</control>
		<control type="image"> <!-- show more fanart but not on homescreen -->
			<include>FullscreenDimensions</include>
			<texture>windows/common/overlay.png</texture>
			<visible>Skin.HasSetting(HomeBackgroundOpacity) + Skin.HasSetting(BackgroundOpacity)</visible>
		</control>
		<control type="image"> <!-- show more fanart and also on homescreen -->
			<include>FullscreenDimensions</include>
			<texture>windows/common/overlay2.png</texture>
			<visible>!Skin.HasSetting(HomeBackgroundOpacity) + Skin.HasSetting(BackgroundOpacity)</visible>
		</control>
		<control type="image"> <!-- neither show more or show even more -->
			<include>FullscreenDimensions</include>
			<texture>windows/common/overlay.png</texture>
			<visible>!Skin.HasSetting(BackgroundOpacity) + !Skin.HasSetting(MoreBackgroundOpacity)</visible>
		</control>
	</include>
	<include name="CommonOverlayMusicAndVideoInfo">
		<control type="videowindow">
			<include>FullscreenDimensions</include>
			<visible>Skin.HasSetting(BackgroundVideo) + Player.HasVideo</visible>
		</control>
		<control type="visualisation">
			<include>FullscreenDimensions</include>
			<visible>Player.HasAudio + Skin.HasSetting(OSDVisualisation.Enabled) + Skin.HasSetting(HomeVisualisation.Enabled)</visible>
		</control>
		<control type="image"> 
			<include>FullscreenDimensions</include>
			<texture>windows/common/overlay2.png</texture>
		</control>
	</include>
	<include name="CommonItems">
		<include>CommonContent</include>
		<include>BackgroundFanart</include>
		<include>CommonOverlay</include>
	</include>
	<include name="CommonItemsHome">
		<include>CommonContent</include>
		<include>HomeCustomBackdrops</include>
		<include>CommonOverlayHome</include>
	</include>
	<include name="CommonItems2">
		<include>CommonContent</include>
		<include>BackgroundFanart</include>
		<include>CommonOverlayMusicAndVideoInfo</include>
	</include>
	<include name="CommonItemsMusicOSD">
		<include condition="Skin.HasSetting(OSDVisualisation.Enabled) + ![System.HasAddon(script.artistslideshow) + Skin.HasSetting(ArtistSlideShow.Enabled)]">OSDVisualisation</include>
		<include>BackgroundFanartMusicOSD</include>
	</include>
	<include name="CommonSettingsItems">
		<include>CommonContent</include>
		<include>CommonOverlay</include>
	</include>
	<include name="CommonPlaylistEditorItems">
		<include>CommonContent</include>
		<control type="image">
			<include>FullscreenDimensions</include>
			<fadetime>500</fadetime>
			<include>Animation_FanartFade</include>
			<texture background="true">$VAR[PlaylistEditorFanart]</texture>
			<visible>Skin.HasSetting(BackgroundVideo) + Player.HasVideo</visible>
		</control>
		<include>CommonOverlay</include>
	</include>
	<include name="CommonPVRItems">
		<include>CommonContent</include>
		<include>CommonOverlay</include>
	</include>
	<include name="CommonWeatherItems">
		<include>CommonContent</include>
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
			<fadetime>600</fadetime>
			<loop>yes</loop>
			<include>Animation_FanartFade</include>
			<imagepath background="true">$INFO[Skin.String(WeatherFanartDir)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<visible>Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<include>CommonOverlay</include>
	</include>
	<include name="BackdropMultiTime1">
		<timeperimage>15000</timeperimage>
	</include>
	<include name="BackdropMultiTime2">
		<timeperimage>30000</timeperimage>
	</include>
	<include name="BackdropMultiTime3">
		<timeperimage>60000</timeperimage>
	</include>
	<!-- ============== -->
	<!-- Home Backdrops -->
	<!-- ============== -->
	<include name="HomeCustomBackdrops">
		<control type="image">
			<include>FullscreenDimensions</include>
			<include>Animation_FanartFade</include>
			<fadetime>600</fadetime>
			<texture background="true" fallback=".">$INFO[Container(20).ListItem.property(single)]</texture>
			<visible>!IsEmpty(Container(20).ListItem.property(single)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo] + !Container(20).Scrolling</visible>
		</control>
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<include condition="IsEmpty(Skin.String(BackdropMultiTime)) | stringcompare(Skin.String(BackdropMultiTime),15sec)">BackdropMultiTime1</include>
			<include condition="stringcompare(Skin.String(BackdropMultiTime),30sec)">BackdropMultiTime2</include>
			<include condition="stringcompare(Skin.String(BackdropMultiTime),1min)">BackdropMultiTime3</include>
			<randomize>true</randomize>
			<fadetime>600</fadetime>
			<loop>yes</loop>
			<include>Animation_FanartFade</include>
			<imagepath background="true" fallback=".">$INFO[Container(20).ListItem.property(multi)]</imagepath>
			<visible>!IsEmpty(Container(20).ListItem.property(multi)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo] + !Container(20).Scrolling</visible>
		</control>
		<control type="image">
			<description>Music npl fanart</description>
			<include>FullscreenDimensions</include>
			<texture background="true" fallback=".">$INFO[Player.Art(fanart)]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>[[stringcompare(Skin.String(HomeScreen),classic) | stringcompare(Skin.String(HomeScreen),horizontal)] + Container(20).HasFocus(4)] + Player.HasAudio</visible>
		</control>
		<control type="image">
			<description>Search results fanart</description>
			<include>FullscreenDimensions</include>
			<texture background="true" fallback=".">$INFO[Window(Home).Property(fanart_image)]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>!IsEmpty(Window(Home).property(fanart_image)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="image">
			<description>Classic and Horizontal recent items fanarts</description>
			<include>FullscreenDimensions</include>
			<texture background="true" fallback=".">$INFO[Container(82).ListItem.Icon]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>[Control.HasFocus(82) + !Container(20).HasFocus(7)] + [stringcompare(Skin.String(HomeScreen),classic) | stringcompare(Skin.String(HomeScreen),horizontal)] +
				![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="image">
			<description>Horizontal featured/ongoing/spotlight items fanarts</description>
			<include>FullscreenDimensions</include>
			<texture background="true" fallback=".">$INFO[Container(83).ListItem.Icon]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>Control.HasFocus(83) + stringcompare(Skin.String(HomeScreen),horizontal) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="image">
			<description>Horizontal featured/ongoing/spotlight items fanarts</description>
			<include>FullscreenDimensions</include>
			<texture background="true" fallback=".">$INFO[Container(84).ListItem.Icon]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>Control.HasFocus(84) + stringcompare(Skin.String(HomeScreen),horizontal) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="multiimage">
			<description>Weather fanarts</description>
			<include>FullscreenDimensions</include>
			<include>Animation_FanartFade</include>
			<timeperimage>15000</timeperimage>
			<randomize>true</randomize>
			<fadetime>600</fadetime>
			<loop>yes</loop>
			<aspectratio>scale</aspectratio>
			<imagepath background="true" fallback=".">$INFO[Skin.String(WeatherFanartDir)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<visible>[stringcompare(Skin.String(HomeScreen),classic) | stringcompare(Skin.String(HomeScreen),horizontal)] + Skin.HasSetting(ShowHomeWeatherFanart) + Container(20).HasFocus(9)</visible>
		</control>
	</include>
	<!-- ============== -->
	<!-- Skin Backdrops -->
	<!-- ============== -->
	<include name="CommonContent">
		<control type="group">
			<animation effect="slide" end="0" time="0" delay="400" condition="!IsEmpty(Window(home).property(NoAnimation))" reversible="false">WindowClose</animation>
			<control type="image">
				<description>Custom Wallpaper Image</description>
				<include>FullscreenDimensions</include>
				<texture fallback="special://skin/extras/backgrounds/01.jpg">$INFO[Skin.String(GlobalBackdropSingle)]</texture>
				<include>visiblehidefadeinfo</include>
				<visible>[IsEmpty(ListItem.Art(fanart)) | Skin.HasSetting(HideFanart)] + IsEmpty(Skin.String(GlobalBackdropMulti)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
			</control>
			<control type="multiimage">
				<description>Custom Wallpaper Image</description>
				<include>FullscreenDimensions</include>
				<include condition="IsEmpty(Skin.String(BackdropMultiTime)) | stringcompare(Skin.String(BackdropMultiTime),15sec)">BackdropMultiTime1</include>
				<include condition="stringcompare(Skin.String(BackdropMultiTime),30sec)">BackdropMultiTime2</include>
				<include condition="stringcompare(Skin.String(BackdropMultiTime),1min)">BackdropMultiTime3</include>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<imagepath background="true" fallback=".">$INFO[Skin.String(GlobalBackdropMulti)]</imagepath>
				<include>visiblehidefadeinfo</include>
				<visible>[IsEmpty(ListItem.Art(fanart)) | Skin.HasSetting(HideFanart)] + !IsEmpty(Skin.String(GlobalBackdropMulti)) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
			</control>
		</control>
	</include>
	<!-- ====== -->
	<!-- Fanart -->
	<!-- ====== -->
	<variable name="ViewFanart">
		<value condition="!IsEmpty(Window(home).property(fanart_image))">$INFO[Window(home).property(fanart_image)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<include name="BackgroundFanart">
		<control type="image">
			<description>List Panel fanart</description>
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[ListItem.FileNameAndPath]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>Window.IsVisible(pictures) + Container.HasFiles + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="image">
			<description>List Panel fanart</description>
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[ViewFanart]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<visible>!Skin.HasSetting(HideFanart) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
		</control>
		<control type="group">
			<description>Extrafanart</description>
			<visible>!Window.IsActive(script-Actors-DialogVideoInfo.xml) + !Skin.HasSetting(HideFanart) + Skin.HasSetting(ExtraFanart.Enabled) + ![Skin.HasSetting(BackgroundVideo) + Player.HasVideo]</visible>
			<animation effect="fade" start="0" end="100" time="600" delay="8000">WindowOpen</animation>
			<control type="multiimage">
				<include>FullscreenDimensions</include>
				<timeperimage>7400</timeperimage>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<include>Animation_FanartFade</include>
				<imagepath background="true">$INFO[ListItem.Path,,extrafanart]</imagepath>
				<visible>Container.Content(movies)</visible>
				<animation effect="fade" start="0" end="100" time="600" delay="9200" condition="!Container.OnNext + !Container.OnPrevious">Conditional</animation>
			</control>
			<control type="multiimage">
				<include>FullscreenDimensions</include>
				<timeperimage>7400</timeperimage>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<include>Animation_FanartFade</include>
				<imagepath background="true">$INFO[ListItem.Path,,extrafanart]</imagepath>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="multiimage">
				<include>FullscreenDimensions</include>
				<timeperimage>7400</timeperimage>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<include>Animation_FanartFade</include>
				<imagepath background="true">$INFO[ListItem.Path,,../extrafanart]</imagepath>
				<visible>Container.Content(episodes)</visible>
			</control>
		</control>
	</include>
	<include name="BackgroundFanartMusicOSD">
		<control type="image">
			<description>Music OSD fanart</description>
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[OSDMusicFanart]</texture>
			<fadetime>600</fadetime>
			<include>Animation_FanartFade</include>
			<animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
			<visible>!Skin.HasSetting(ArtistSlideShow.Enabled) + ![Skin.HasSetting(OSDVisualisation.Enabled) + !Skin.HasSetting(OSDVisualisation.ShowFanart)]</visible>
		</control>
		<control type="multiimage">
			<aspectratio>keep</aspectratio>
			<include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
			<fadetime>600</fadetime>
			<loop>yes</loop>
			<include>Animation_FanartFade</include>
			<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
			<visible>System.HasAddon(script.artistslideshow) + Skin.HasSetting(ArtistSlideShow.Enabled)</visible>
			<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
			<animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
		</control>
	</include>
	<variable name="PlaylistEditorFanart">
		<value condition="Control.HasFocus(100)">$INFO[Container(100).ListItem.Art(fanart)]</value>
		<value>$INFO[Container(50).ListItem.Art(fanart)]</value>
	</variable>
	<!-- ============================================= -->
	<!-- Fade Backgrounds (behind dialogs, menus etc.) -->
	<!-- ============================================= -->
	<include name="FadeBackgroundDialog">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>windows/common/black_content.png</texture>
			<animation effect="fade" time="300" start="0" end="95" tween="sine" easing="out">WindowOpen</animation>
			<animation effect="fade" time="300" start="95" end="0" tween="sine" easing="in">WindowClose</animation>
		</control>
	</include>
	<include name="FadeBackground">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>windows/common/black_content.png</texture>
			<animation effect="fade" time="300" start="0" end="95" tween="sine" easing="out"
				condition="!Window.IsActive(mediafilter) + !Window.IsVisible(contextmenu) + !Window.IsActive(script-Actors-DialogVideoInfo.xml">Visible</animation>
			<animation effect="fade" time="300" start="95" end="0" tween="sine" easing="in">Hidden</animation>
			<visible>[[Window.IsActive(contentsettings) | Window.IsActive(addonsettings) | Window.IsActive(filebrowser) | [Window.IsActive(virtualkeyboard) + IsEmpty(Window(Home).Property(HomeSearch))] |
				Window.IsActive(playercontrols) | Window.IsActive(profilesettings) | Window.IsActive(selectdialog) | Window.IsActive(progressdialog) | Window.IsActive(mediasource) |
				Window.IsActive(screencalibration) | Window.IsActive(numericinput) | Window.IsActive(filestackingdialog) | Window.IsActive(LockSettings)] + !Window.IsActive(movieinformation) +
				!Window.IsActive(1122) + !Window.IsActive(addoninformation) + !Window.IsActive(musicinformation) + !Window.IsActive(script-globalsearch-infodialog.xml)] | Window.IsActive(smartplaylisteditor) |
				Window.IsActive(smartplaylistrule) | Window.IsActive(pictureinfo) | Window.IsActive(script-RSS_Editor-rssEditor.xml) | Window.IsActive(script-RSS_Editor-setEditor.xml) | Window.IsActive(3001) |
				Window.IsActive(3002) | Window.IsActive(3003) | Window.IsActive(3007) | Window.IsActive(peripherals) | Window.IsActive(peripheralsettings) | Window.IsActive(mediafilter) |
				Window.IsActive(mediafilter) | Window.IsActive(pvrgroupmanager) | Window.IsActive(pvrtimersetting) | Window.IsActive(pvrguidesearch) | Window.IsActive(pvrchannelmanager) |
				Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo)</visible>
		</control>
	</include>
	<include name="FadeBackgroundMovieInfo">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>windows/common/black_content.png</texture>
			<animation effect="fade" time="300" start="0" end="95" tween="sine" easing="out">Visible</animation>
			<animation effect="fade" time="300" start="95" end="0" tween="sine" easing="in">Hidden</animation>
			<visible>Window.IsActive(contentsettings) | Window.IsActive(addonsettings) | Window.IsActive(filebrowser) | Window.IsActive(yesnodialog) | Window.IsActive(virtualkeyboard) |
				Window.IsActive(playercontrols) | Window.IsActive(profilesettings) | Window.IsActive(selectdialog) | Window.IsActive(progressdialog) | Window.IsActive(okdialog) | Window.IsActive(numericinput) |
				Window.IsActive(3004) | Window.IsActive(DialogSelect.xml)</visible>
		</control>
	</include>
	<include name="FadeBackgroundContentContext">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>windows/common/black2.png</texture>
			<include>OpenCloseAnimationTwo</include>
			<visible>[ControlGroup(9000).HasFocus() | Window.IsActive(contextmenu)] + !Window.IsActive(shutdownmenu) + !Window.IsActive(movieinformation) + !Window.IsActive(1122) +
				!Window.IsActive(addoninformation) + !Window.IsActive(musicinformation)</visible>
		</control>
	</include>
	<include name="FadeBackgroundButtonMenu">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture>windows/common/black2.png</texture>
			<include>OpenCloseAnimationThree</include>
		</control>
	</include>
	<!-- ============== -->
	<!-- Sort letters -->
	<!-- ============== -->
	<include name="ScrollLetterFileBrowser">
		<control type="group">
			<posx>275</posx>
			<posy>440</posy>
			<animation type="Visible" reversible="false">
				<effect type="slide" start="-10" end="0" time="300" delay="0" tween="sine" easing="in" />
				<effect type="fade" start="0" end="100" time="200" delay="100" tween="sine" easing="in" />
			</animation>
			<animation type="Hidden">
				<effect type="slide" start="0" end="-10" delay="1500" time="300" tween="sine" easing="in" />
				<effect type="fade" start="100" end="0" delay="1500" time="300" tween="sine" easing="out" />
			</animation>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>200</width>
				<height>200</height>
				<texture flipx="true">dialogs/other/alphapanel.png</texture>
			</control>
			<control type="label">
				<posx>26</posx>
				<posy>34</posy>
				<width>132</width>
				<height>132</height>
				<font>Font-Condensed-S80</font>
				<align>center</align>
				<textcolor>MenuGrey</textcolor>
				<textshadow>white</textshadow>
				<label>$INFO[Container(450).ListItem.SortLetter]</label>
			</control>
			<visible>Container(450).Scrolling</visible>
		</control>
	</include>
	<!-- ============= -->
	<!-- Various stuff -->
	<!-- ============= -->
	<include name="optionsbuttonsdimensions">
		<posx>0</posx>
		<posy>0</posy>
		<width>404</width>
		<height>57</height>
		<font>Font-Condensed-S34</font>
		<align>left</align>
		<textcolor>FF484848</textcolor>
		<focusedcolor>DDFFFFFF</focusedcolor>
		<disabledcolor>FF484848</disabledcolor>
		<textoffsetx>75</textoffsetx>
		<textwidth>300</textwidth>
		<scroll>false</scroll>
	</include>
	<include name="AddonDescHeight_1">
		<height>330</height>
	</include>
	<include name="AddonDescHeight_2">
		<height>270</height>
	</include>
	<include name="AddonDescHeight_3">
		<height>160</height>
	</include>
	<variable name="MusicPlaylistEditorHeaderLabel">
		<value condition="Window.IsActive(songinformation)">$LOCALIZE[658]</value>
		<value>$LOCALIZE[1214]$INFO[Container.FolderName,: ,]</value>
	</variable>
</includes>